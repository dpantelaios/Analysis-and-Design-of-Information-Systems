#  [global_tags]

# [agent]
#   debug=true
#   interval = "60s"
#   round_interval = true
#   metric_batch_size = 1000
#   metric_buffer_limit = 10000
#   collection_jitter = "0s"
#   flush_interval = "10s"
#   flush_jitter = "0s"
#   precision = ""
#   hostname = "192.xxx.0.xxx"
#   omit_hostname = false

[[outputs.influxdb]]
  urls = ["http://influxdb:8086"]
  database = "influx"
  timeout = "15s"
  username = "telegraf"
  password = "metricsmetricsmetricsmetrics"
  data_format = "influx"


[[outputs.file]]
  ## Files to write to, "stdout" is a specially handled file.
  files = ["stdout", "/tmp/metrics.out"]

  ## Data format to output.
  ## Each data format has its own unique set of configuration options, read
  ## more about them here:
  ## https://github.com/influxdata/telegraf/blob/master/docs/DATA_FORMATS_OUTPUT.md
  data_format = "influx"

  ## Maximum line length in bytes.  Useful only for debugging.
  influx_max_line_bytes = 0

  ## When true, fields will be output in ascending lexical order.  Enabling
  ## this option will result in decreased performance and is only recommended
  ## when you need predictable ordering while debugging.
  influx_sort_fields = false

  ## When true, Telegraf will output unsigned integers as unsigned values,
  ## i.e.: `42u`.  You will need a version of InfluxDB supporting unsigned
  ## integer values.  Enabling this option will result in field type errors if
  ## existing data has been written.
  influx_uint_support = false

[[inputs.kafka_consumer]]
  ## Kafka brokers.
  brokers = ["kafka:29090"]
  topics = ['RAW']
  max_message_len = 1000000
  # data_format = "json"
  data_format = "json"
    # data_type = "string"

# [[inputs.cpu]]
#   percpu = true
#   totalcpu = true
#   collect_cpu_time = false
#   report_active = false



